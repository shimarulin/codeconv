# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# and https://circleci.com/docs/2.0/language-javascript/
# for more details
version: 2.1

defaults: &defaults
  working_directory: ~/project_workspace
  docker:
    - image: circleci/node:12.16.1


cache_key_yarn: &cache_key_yarn
  yarn-packages-{{ checksum "yarn.lock" }}

cache_key_ssh: &cache_key_ssh
  ssh-keys-{{ .Revision }}

save_pkg: &save_pkg
  save_cache:
    name: Save Yarn Package Cache
    key: *cache_key_yarn
    paths:
      - ~/.cache/yarn

restore_pkg: &restore_pkg
  restore_cache:
    name: Restore Yarn Package Cache
    keys:
      - *cache_key_yarn

save_ssh: &save_ssh
  save_cache:
    name: Save SSH config
    key: *cache_key_ssh
    paths:
      - ~/.ssh

restore_ssh: &restore_ssh
  restore_cache:
    name: Restore SSH config
    key: *cache_key_ssh
    paths:
      - ~/.ssh

jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - *restore_pkg
      - run:
          name: Install Dependencies
          command: yarn install --immutable
      - *save_pkg
      - *save_ssh
      - persist_to_workspace:
          root: ~/project_workspace
          paths: .

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project_workspace
      - run:
          name: Run linters
          command: yarn lint
      - run:
          name: Run tests
          command: yarn test

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project_workspace
      - *restore_ssh
      - run:
          name: Setup Git user name
          command: git config --global user.name "CircleCI"
      - run:
          name: Setup Git user email
          command: git config --global user.email "shimarulin@gmail.com"
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/project_workspace/.npmrc
      - run:
          name: Publish packages
          command: yarn publish

workflows:
  development:
    jobs:
      - setup:
          filters:
            branches:
              only:
                - circleci-project-setup
                - /feature\/.*/
                - /fix\/.*/
      - test:
          requires:
            - setup
          filters:
            branches:
              only:
                - circleci-project-setup
                - /feature\/.*/
                - /fix\/.*/
  deploy:
    jobs:
      - setup:
          filters:
            branches:
              only: master
      - test:
          requires:
            - setup
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
          tags:
            ignore: /.*/
