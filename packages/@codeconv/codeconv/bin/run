#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const project = path.join(__dirname, '../tsconfig.json')
const dev = fs.existsSync(project)

if (dev) {
  require('ts-node').register({
    project,
  })

  /**
   * Register TypeScript paths to add the ability of path resolution to ts-node
   * You must add "baseUrl" and "paths" to root tsconfig.json
   * */
  // "baseUrl": "./packages",
  // "paths": {
  //   "@codeconv/*": ["@codeconv/*/src/index.ts"]
  // }
  const tsConfigPaths = require('tsconfig-paths')
  const tsConfigRoot = path.join(__dirname, '../../../../tsconfig.json')
  const tsConfig = tsConfigPaths.loadConfig(tsConfigRoot)

  if (tsConfig.resultType === 'success') {
    const { baseUrl, paths } = tsConfig
    tsConfigPaths.register({
      baseUrl,
      paths,
    })
  } else {
    console.warn(`${tsConfig.message} on ${tsConfigRoot}`)
  }
}

try {
  require(`../${dev ? 'src' : 'dist'}`).run()
} catch (e) {
  console.dir(e)
}
